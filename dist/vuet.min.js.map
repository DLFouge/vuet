{"version":3,"file":"vuet.min.js","sources":["../src/util.js","../src/vuet-static.js","../src/debug.js","../src/rules/temp.js","../src/rules/need.js","../src/rules/once.js","../src/vuet.js","../src/index.js","../src/rules/index.js"],"sourcesContent":["const util = {\n  isObject (obj) {\n    return !!obj && Object.prototype.toString.call(obj) === '[object Object]'\n  },\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (typeof args[0] === 'string') {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && util.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  isPromise (obj) {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function'\n  }\n}\n\nexport default util\n","import debug from './debug'\nimport util from './util'\n\nexport let _Vue\n\nexport default function (Vuet) {\n  Object.assign(Vuet, {\n    installed: false,\n    options: {\n      rules: {}\n    },\n    install (Vue) {\n      if (this.installed) return this\n      this.installed = true\n      _Vue = Vue\n      Object.defineProperty(Vue.prototype, '$vuet', {\n        get () { return this.$root._vuet }\n      })\n      Vue.mixin({\n        beforeCreate () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet = this.$options.vuet\n              this._vuet._init(this)\n            }\n          }\n        },\n        destroyed () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet.destroy(this)\n            }\n          }\n        }\n      })\n      return this\n    },\n    mapModules (opts) {\n      const mixins = Object.keys(opts).map(alias => {\n        const path = opts[alias]\n        return {\n          computed: {\n            [alias]: {\n              get () {\n                debug.assertModule(this.$vuet, path)\n                return this.$vuet.getModule(path)\n              },\n              set (val) {\n                debug.error(`The'${path}'module is not allowed to assign`)\n              }\n            }\n          }\n        }\n      })\n      return {\n        mixins\n      }\n    },\n    mapRules () {\n      const opts = util.getArgMerge.apply(null, arguments)\n      const vueRules = []\n      const addRule = (ruleName, any) => {\n        const rules = Vuet.options.rules[ruleName]\n        if (typeof any === 'string') {\n          vueRules.push(rules.rule({ path: any }))\n        } else {\n          vueRules.push(rules.rule(any))\n        }\n      }\n      Object.keys(opts).forEach(ruleName => {\n        const any = opts[ruleName]\n        if (Array.isArray(any)) {\n          return any.forEach(item => {\n            addRule(ruleName, item)\n          })\n        }\n        addRule(ruleName, any)\n      })\n      return {\n        mixins: vueRules\n      }\n    },\n    rule () {\n      Vuet.options.rules[arguments[0]] = arguments[1]\n      if (typeof arguments[1].install === 'function') {\n        arguments[1].install(Vuet, _Vue)\n      }\n      return this\n    },\n    callRuleHook (hook, vuet) {\n      Object.keys(Vuet.options.rules).forEach(k => {\n        if (typeof Vuet.options.rules[k][hook] === 'function') {\n          Vuet.options.rules[k][hook](vuet)\n        }\n      })\n    }\n  })\n}\n","import { _Vue } from './vuet-static'\n\nexport default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  },\n  assertModule (vuet, name) {\n    if (name in vuet.modules) {\n      return\n    }\n    this.error(`The '${name}' module does not exist`)\n  },\n  assertVue () {\n    if (!_Vue) {\n      this.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n  },\n  assertPromise () {\n    if (typeof Promise === 'undefined') {\n      this.error('Vuet requires a Promise polyfill in this browser')\n    }\n  }\n}\n","import debug from '../debug'\n\nexport default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        this.$vuet.getModule(path).fetch()\n      },\n      destroyed () {\n        this.$vuet.getModule(path).reset()\n      }\n    }\n  }\n}\n","import debug from '../debug'\n\nexport default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        this.$vuet.getModule(path).fetch()\n      }\n    }\n  }\n}\n","import debug from '../debug'\nimport util from '../util'\n\nconst PATH = '__once__'\n\nexport default {\n  init (vuet) {\n    vuet.register(PATH, {\n      data () {\n        return []\n      }\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        const once = this.$vuet.getModule(PATH)\n        if (once.state.indexOf(path) > -1) return\n        const back = this.$vuet.getModule(path).fetch()\n        if (util.isPromise(back)) {\n          return back.then(res => {\n            once.state.push(path)\n          })\n        }\n        once.state.push(path)\n      }\n    }\n  }\n}\n","import debug from './debug'\nimport util from './util'\nimport { _Vue } from './vuet-static'\nexport default class Vuet {\n  constructor (opts) {\n    debug.assertVue()\n    debug.assertPromise()\n\n    this.modules = {}\n    this.store = {}\n    this.options = {\n      pathJoin: '/',\n      modules: {}\n    }\n    this.app = null\n    this.vm = new _Vue({\n      data: {\n        modules: this.store\n      }\n    })\n    Object.assign(this.options, opts)\n    Object.keys(this.options.modules).forEach(k => {\n      this.register(k, this.options.modules[k])\n    })\n    Vuet.callRuleHook('init', this)\n  }\n  _init (app) {\n    this.app = app\n  }\n  register (path, opts) {\n    if (typeof opts.data !== 'function') return debug.error(`'data'hooks must be function types`)\n    const vuet = this\n    opts = { ...opts }\n    _Vue.set(vuet.store, path, opts.data())\n    vuet.modules[path] = opts\n    Vuet.callRuleHook('register', this, path)\n    Object.defineProperty(opts, 'vuet', {\n      get: () => (vuet)\n    })\n    Object.defineProperty(opts, 'app', {\n      get: () => (vuet.app)\n    })\n    Object.defineProperty(opts, 'state', {\n      get () {\n        return vuet.store[path]\n      },\n      set (val) {\n        vuet.store[path] = val\n      }\n    })\n    Object.assign(opts, {\n      reset () {\n        this.state = this.data()\n      }\n    })\n    Object.keys(opts).forEach(k => {\n      if (typeof opts[k] === 'function') {\n        const native = opts[k]\n        opts[k] = function proxy () {\n          return native.apply(vuet.modules[path], arguments)\n        }\n      }\n    })\n    if (util.isObject(opts.state)) {\n      Object.keys(opts.state).forEach(k => {\n        if (k in opts) {\n          return debug.warn(`'${k}' already exists on the object`)\n        }\n        Object.defineProperty(opts, k, {\n          get () {\n            return vuet.store[path][k]\n          },\n          set (val) {\n            vuet.store[path][k] = val\n          }\n        })\n      })\n    }\n    if (util.isObject(opts.modules)) {\n      Object.keys(opts.modules).forEach(k => {\n        this.register(`${path}${this.options.pathJoin}${k}`, opts.modules[k])\n      })\n    }\n    return this\n  }\n  getModule (path) {\n    debug.assertModule(this, path)\n    return this.modules[path]\n  }\n  getState (path) {\n    debug.assertModule(this, path)\n    return this.modules[path].state\n  }\n  destroy () {\n    this.vm.$destroy()\n    Vuet.callRuleHook('destroy', this)\n  }\n}\n","import rules from './rules/index'\nimport VuetStatic from './vuet-static'\nimport Vuet from './vuet'\n\nVuetStatic(Vuet)\nrules(Vuet)\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n","import temp from './temp'\nimport need from './need'\nimport once from './once'\n\nexport default function install (Vuet) {\n  Vuet\n    .rule('temp', temp)\n    .rule('need', need)\n    .rule('once', once)\n}\n"],"names":["util","obj","Object","prototype","toString","call","opt","args","arguments","length","isObject","then","_Vue","msg","Error","vuet","name","modules","error","Promise","path","assertModule","this","$vuet","getModule","fetch","reset","register","once","state","indexOf","back","isPromise","push","Vuet","opts","assertVue","assertPromise","store","options","app","vm","assign","keys","forEach","k","_this","callRuleHook","data","debug","set","defineProperty","val","native","apply","warn","_this2","pathJoin","$destroy","Vue","installed","$root","_vuet","mixin","$options","_init","destroy","map","alias","getArgMerge","vueRules","addRule","ruleName","any","rules","rule","Array","isArray","item","install","hook","temp","need","mapRules","bind","mapModules"],"mappings":"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"}