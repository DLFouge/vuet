{"version":3,"file":"vuet-route.min.js","sources":["../src/index.js","../../../src/vuet-static.js","../../../src/debug.js"],"sourcesContent":["import debug from '../../../src/debug'\n// import util from '../../../src/util'\n\nconst NAME = '__route__'\n\nfunction isWatch (vuet, path, route = {}) {\n  const vtm = vuet.getModule(path)\n  let watch = vtm.route.watch || ['fullPath']\n  watch = Array.isArray(watch) ? watch : [watch]\n  const oldWatch = vuet[NAME][path]\n  vuet[NAME][path] = []\n  watch.forEach(k => {\n    let data = route\n    k.split('.').forEach(chlidKey => {\n      data = data[chlidKey]\n    })\n    vuet[NAME][path].push(JSON.stringify(data))\n  })\n  return oldWatch.join() !== vuet[NAME][path].join()\n}\n\nexport default {\n  init (vuet) {\n    vuet[NAME] = {}\n  },\n  addModule (vuet, path) {\n    vuet[NAME][path] = []\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        const vtm = this.$vuet.getModule(path)\n        if (isWatch(this.$vuet, path, this.$route)) {\n          vtm.reset()\n          vtm.state.__routeLoaded__ = true\n          return vtm.fetch(vtm)\n        }\n        if (vtm.route.once !== false) { // default\n          return vtm.fetch(vtm)\n        }\n        if (!vtm.state.__routeLoaded__) {\n          return vtm.fetch(vtm)\n        }\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const vtm = this.$vuet.getModule(path)\n            if (isWatch(this.$vuet, path, to)) {\n              vtm.reset()\n              vtm.fetch(vtm)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import debug from './debug'\nimport util from './util'\n\nexport let _Vue\n\nexport default function (Vuet) {\n  Object.assign(Vuet, {\n    installed: false,\n    options: {\n      rules: {}\n    },\n    install (Vue) {\n      if (this.installed) return this\n      this.installed = true\n      _Vue = Vue\n      Object.defineProperty(Vue.prototype, '$vuet', {\n        get () { return this.$root._vuet }\n      })\n      Vue.mixin({\n        beforeCreate () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet = this.$options.vuet\n              this._vuet._init(this)\n            }\n          }\n        },\n        destroyed () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet.destroy(this)\n            }\n          }\n        }\n      })\n      return this\n    },\n    mapModules (opts) {\n      const mixins = Object.keys(opts).map(alias => {\n        const path = opts[alias]\n        return {\n          computed: {\n            [alias]: {\n              get () {\n                debug.assertModule(this.$vuet, path)\n                return this.$vuet.getModule(path)\n              },\n              set (val) {\n                debug.error(`The'${path}'module is not allowed to assign`)\n              }\n            }\n          }\n        }\n      })\n      return {\n        mixins\n      }\n    },\n    mapRules () {\n      const opts = util.getArgMerge.apply(null, arguments)\n      const vueRules = []\n      const addRule = (ruleName, any) => {\n        const rules = Vuet.options.rules[ruleName]\n        if (!util.isObject(rules)) debug.error(`The'${ruleName}'rule does not exist. Please make sure that it executes 'Vuet.rule('${ruleName}', opts)' before all components`)\n        if (typeof any === 'string') {\n          vueRules.push(rules.rule({ path: any }))\n        } else {\n          vueRules.push(rules.rule(any))\n        }\n      }\n      Object.keys(opts).forEach(ruleName => {\n        const any = opts[ruleName]\n        if (Array.isArray(any)) {\n          return any.forEach(item => {\n            addRule(ruleName, item)\n          })\n        }\n        addRule(ruleName, any)\n      })\n      return {\n        mixins: vueRules\n      }\n    },\n    rule () {\n      Vuet.options.rules[arguments[0]] = arguments[1]\n      if (typeof arguments[1].install === 'function') {\n        arguments[1].install(Vuet, _Vue)\n      }\n      return this\n    },\n    callRuleHook (hook, ...arg) {\n      Object.keys(Vuet.options.rules).forEach(k => {\n        if (typeof Vuet.options.rules[k][hook] === 'function') {\n          Vuet.options.rules[k][hook].apply(undefined, arg)\n        }\n      })\n    }\n  })\n}\n","import { _Vue } from './vuet-static'\n\nexport default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  },\n  assertModule (vuet, name) {\n    if (name in vuet.modules) {\n      return\n    }\n    this.error(`The '${name}' module does not exist`)\n  },\n  assertVue () {\n    if (!_Vue) {\n      this.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n  },\n  assertPromise () {\n    if (typeof Promise === 'undefined') {\n      this.error('Vuet requires a Promise polyfill in this browser')\n    }\n  }\n}\n"],"names":["isWatch","vuet","path","route","vtm","getModule","watch","Array","isArray","oldWatch","NAME","forEach","data","split","chlidKey","push","JSON","stringify","join","msg","Error","name","modules","error","Promise","assertModule","this","$vuet","$route","reset","state","__routeLoaded__","fetch","once","to","from"],"mappings":"wMAKA,SAASA,GAASC,EAAMC,MAAMC,6DACtBC,EAAMH,EAAKI,UAAUH,GACvBI,EAAQF,EAAID,MAAMG,QAAU,cACxBC,MAAMC,QAAQF,GAASA,GAASA,MAClCG,GAAWR,EAAKS,GAAMR,YACvBQ,GAAMR,QACLS,QAAQ,eACRC,GAAOT,IACTU,MAAM,KAAKF,QAAQ,cACZC,EAAKE,OAETJ,GAAMR,GAAMa,KAAKC,KAAKC,UAAUL,MAEhCH,EAASS,SAAWjB,EAAKS,GAAMR,GAAMgB,OCfvC,sBCAEC,QACC,IAAIC,iBAAgBD,kBAEtBA,2BAKQlB,EAAMoB,GACdA,IAAQpB,GAAKqB,cAGZC,cAAcF,wDAIZE,MAAM,sFAIU,mBAAZC,eACJD,MAAM,sDFrBXb,EAAO,6BAmBLT,KACCS,0BAEIT,EAAMC,KACVQ,GAAMR,2BAELA,KAAAA,sCAGIuB,aAAaC,KAAKC,MAAOzB,MACzBE,GAAMsB,KAAKC,MAAMtB,UAAUH,SAC7BF,GAAQ0B,KAAKC,MAAOzB,EAAMwB,KAAKE,WAC7BC,UACAC,MAAMC,iBAAkB,EACrB3B,EAAI4B,MAAM5B,KAEI,IAAnBA,EAAID,MAAM8B,KACL7B,EAAI4B,MAAM5B,GAEdA,EAAI0B,MAAMC,uBACN3B,EAAI4B,MAAM5B,yBAKX,mBACG8B,EAAIC,MACL/B,GAAMsB,KAAKC,MAAMtB,UAAUH,EAC7BF,GAAQ0B,KAAKC,MAAOzB,EAAMgC,OACxBL,UACAG,MAAM5B"}