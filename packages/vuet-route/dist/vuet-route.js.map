{"version":3,"file":"vuet-route.js","sources":["../../../src/vuet-static.js","../../../src/debug.js","../src/index.js"],"sourcesContent":["import debug from './debug'\nimport util from './util'\n\nexport let _Vue\n\nexport default function (Vuet) {\n  Object.assign(Vuet, {\n    installed: false,\n    options: {\n      rules: {}\n    },\n    install (Vue) {\n      if (this.installed) return this\n      this.installed = true\n      _Vue = Vue\n      Object.defineProperty(Vue.prototype, '$vuet', {\n        get () { return this.$root._vuet }\n      })\n      Vue.mixin({\n        beforeCreate () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet = this.$options.vuet\n              this._vuet._init(this)\n            }\n          }\n        },\n        destroyed () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            if (this.$options.vuet instanceof Vuet) {\n              this._vuet.destroy(this)\n            }\n          }\n        }\n      })\n      return this\n    },\n    mapModules (opts) {\n      const mixins = Object.keys(opts).map(alias => {\n        const path = opts[alias]\n        return {\n          computed: {\n            [alias]: {\n              get () {\n                debug.assertModule(this.$vuet, path)\n                return this.$vuet.getModule(path)\n              },\n              set (val) {\n                debug.error(`The'${path}'module is not allowed to assign`)\n              }\n            }\n          }\n        }\n      })\n      return {\n        mixins\n      }\n    },\n    mapRules () {\n      const opts = util.getArgMerge.apply(null, arguments)\n      const vueRules = []\n      const addRule = (ruleName, any) => {\n        const rules = Vuet.options.rules[ruleName]\n        if (!util.isObject(rules)) debug.error(`The'${ruleName}'rule does not exist. Please make sure that it executes 'Vuet.rule('${ruleName}', opts)' before all components`)\n        if (typeof any === 'string') {\n          vueRules.push(rules.rule({ path: any }))\n        } else {\n          vueRules.push(rules.rule(any))\n        }\n      }\n      Object.keys(opts).forEach(ruleName => {\n        const any = opts[ruleName]\n        if (Array.isArray(any)) {\n          return any.forEach(item => {\n            addRule(ruleName, item)\n          })\n        }\n        addRule(ruleName, any)\n      })\n      return {\n        mixins: vueRules\n      }\n    },\n    rule () {\n      Vuet.options.rules[arguments[0]] = arguments[1]\n      if (typeof arguments[1].install === 'function') {\n        arguments[1].install(Vuet, _Vue)\n      }\n      return this\n    },\n    callRuleHook (hook, ...arg) {\n      Object.keys(Vuet.options.rules).forEach(k => {\n        if (typeof Vuet.options.rules[k][hook] === 'function') {\n          Vuet.options.rules[k][hook].apply(undefined, arg)\n        }\n      })\n    }\n  })\n}\n","import { _Vue } from './vuet-static'\n\nexport default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  },\n  assertModule (vuet, name) {\n    if (name in vuet.modules) {\n      return\n    }\n    this.error(`The '${name}' module does not exist`)\n  },\n  assertVue () {\n    if (!_Vue) {\n      this.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n  },\n  assertPromise () {\n    if (typeof Promise === 'undefined') {\n      this.error('Vuet requires a Promise polyfill in this browser')\n    }\n  }\n}\n","import debug from '../../../src/debug'\n// import util from '../../../src/util'\n\nconst NAME = '__route__'\n\nfunction isWatch (vuet, path, route) {\n  const vtm = vuet.getModule(path)\n  let watch = vtm.route.watch || ['fullPath']\n  watch = Array.isArray(watch) ? watch : [watch]\n  const oldWatch = vuet[NAME][path]\n  vuet[NAME][path] = []\n  watch.forEach(k => {\n    let data = route\n    k.split('.').forEach(chlidKey => {\n      data = data[chlidKey]\n    })\n    vuet[NAME][path].push(JSON.stringify(data))\n  })\n  return oldWatch.join() !== vuet[NAME][path].join()\n}\n\nexport default {\n  init (vuet) {\n    vuet[NAME] = {}\n  },\n  addModule (vuet, path) {\n    vuet[NAME][path] = []\n    const vtm = vuet.getModule(path)\n    Object.keys(vtm.route).forEach(k => {\n      if (typeof vtm.route[k] === 'function') {\n        vtm.route[k] = vtm.route[k].bind(vtm)\n      }\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        const vtm = this.$vuet.getModule(path)\n        if (isWatch(this.$vuet, path, this.$route)) {\n          vtm.reset()\n          vtm.state.__routeLoaded__ = true\n          return vtm.route.fetch(vtm)\n        }\n        if (vtm.route.once !== false) { // default\n          return vtm.route.fetch(vtm)\n        }\n        if (!vtm.state.__routeLoaded__) {\n          return vtm.route.fetch(vtm)\n        }\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const vtm = this.$vuet.getModule(path)\n            if (isWatch(this.$vuet, path, to)) {\n              vtm.reset()\n              vtm.route.fetch(vtm)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"names":["_Vue","msg","Error","process","console","warn","vuet","name","modules","error","Promise","NAME","isWatch","path","route","vtm","getModule","watch","Array","isArray","oldWatch","forEach","data","split","chlidKey","push","JSON","stringify","join","keys","k","bind","assertModule","$vuet","$route","reset","state","__routeLoaded__","fetch","once","to","from"],"mappings":"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"}